stages:
  - cleaning
  - build-aws-deployer
  - test-aws-deployer
  - build-aws-deployer-docker
  - test-aws-deployer-docker
  - publish-aws-deployer
  - publish-aws-deployer-docker

before_script:
  - VERSION=$(cat aws-deployer/VERSION)
  
variables:
  DOCKER_DRIVER: overlay2
  REGISTRY: matsskoglund
  TEST_REGISTRY: registry.gitlab.com/$REGISTRY 
  
.job_template: &test-aws-deployer-template
  stage: test-aws-deployer
  script:
    - aws --version
  tags:
    - vanilla
  except:
    - schedules
 
build-aws-deployer:
  stage: build-aws-deployer
  before_script:  
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
    - VERSION=$(cat aws-deployer/VERSION)
  script:
    - >
      docker build 
      -t $TEST_REGISTRY/aws-deployer:$VERSION
      -t $TEST_REGISTRY/aws-deployer:latest 
      aws-deployer/.
    - docker push $TEST_REGISTRY/aws-deployer:latest
    - docker push $TEST_REGISTRY/aws-deployer:$VERSION
  tags: 
    - dind
  except:
    - schedules

test-aws-deployer-latest:
  image:  $TEST_REGISTRY/aws-deployer:latest
  <<: *test-aws-deployer-template

test-aws-deployer-empty:
  image:  $TEST_REGISTRY/aws-deployer
  <<: *test-aws-deployer-template

publish-aws-deployer:
  stage: publish-aws-deployer
  before_script:
    - VERSION=$(cat aws-deployer/VERSION)
    - docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" registry.gitlab.com
  script:
    - docker pull $TEST_REGISTRY/aws-deployer:latest
    - docker tag $TEST_REGISTRY/aws-deployer:latest $REGISTRY/aws-deployer:latest
    - docker push $REGISTRY/aws-deployer:latest
    - docker pull $TEST_REGISTRY/aws-deployer:$VERSION
    - docker tag $TEST_REGISTRY/aws-deployer:$VERSION $REGISTRY/aws-deployer:$VERSION
    - docker push $REGISTRY/aws-deployer:$VERSION    
  tags:
    - dind
  except:
    - schedules
  dependencies:
    - test-aws-deployer-latest

include: 'aws-deployer-docker/.gitlab-ci-docker.yml'

cleaning:
  stage: cleaning
  only:
    - schedules
  script:
    - docker image prune -a -f
  tags:
    - dind